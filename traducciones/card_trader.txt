//===== rAthena Script =======================================
//= Card Trader
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.1 
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: =========================================
//= Exchange cards for points.
//============================================================
 
prtbar,44,24,3	script	Card Recycler	402,{
	mes "[ ^2e9c99Card Recycler^000000 ]";
	mes "Hi!";
	mes "With me you can get 1 ^800080point^000000 witch each ^1E90FFcard^000000 of a normal monster you sell to me, when you get 10 ^800080points^000000 you can buy an 1x^FF6133Old Card Album^000000.";
	next;
	mes "[ ^00BFFFCard Recycler^000000 ]";
	mes "~ ^FF0000Note: 99.7% of MVP and Miniboss cards are blocked, but that doesn't mean you should be very careful when selling your cards^000000.";
	next;
	switch(select("~ Sell Cards:~ Shop (^0055FF"+getd(.Points$)+"^000000 puntos).:Exit")) {
	
	case 1:
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "Select only the ^1E90FFcards^000000 you want to sell for ^800080points^000000.";
		if (.Level) {
			mes "[ ^00BFFFCard Recycler^000000 ]";
			mes " ";
			mes "Must be dropped cards";
			mes "by monsters from level";
			mes .Level+" onwards.";
		}
		deletearray @sold_nameid[0],getarraysize(@sold_nameid);
		callshop "card_shop_trade",2;
		npcshopattach "card_shop_trade";
		end;
	case 2:
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "You ^0055FF"+getd(.Points$)+"^000000 ^800080have^000000"+((getd(.Points$) == 1)?".":".");
		callshop "card_shop_trade",1;
		npcshopattach "card_shop_trade";
		end;
	case 3:
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "See you later!";
		emotion ET_SLEEPY;
		close;		
	}
 
OnSellItem:
	mes "[ ^2e9c99Card Recycler^000000 ]";
	mes "Cards to sell:";
	mes "-----------------------------------";
	for(set .@i,0; .@i < getarraysize(@sold_nameid); set .@i,.@i+1)
		if (@sold_nameid[.@i] > 4000 && @sold_nameid[.@i] < 4700) {
			if (.Level) {
				query_sql("SELECT `LV` FROM `mob_db` WHERE `DropCardid` = "+@sold_nameid[.@i],.@lv);
				if (.@lv < .Level) {
					dispbottom getitemname(@sold_nameid[.@i])+" is under the minimum level.";
					continue;
				}
			}
			set .@mvp, compare(.MVP$,""+@sold_nameid[.@i]);
			if ( .@mvp ) {
				mes "~ ^777777This is an MVP or Mini Boss card^000000.";
				close;
			}
			set .@card_id[getarraysize(.@card_id)], @sold_nameid[.@i];
			set .@card_amt[getarraysize(.@card_amt)], @sold_quantity[.@i];
			mes "~ ^777777"+@sold_quantity[.@i]+"x "+getitemname(@sold_nameid[.@i])+"^000000.";
			set .@card_total, .@card_total+(@sold_quantity[.@i]*.Points[0]);
		}
	deletearray @sold_nameid[0], getarraysize(@sold_nameid);
	deletearray @sold_quantity[0], getarraysize(@sold_quantity);
	if (!.@card_id) {
		mes "~ ^777777(Nothing)^000000.";
		emotion ET_SWT;
		close;
	}
	mes " ";
	mes "----- Total: ^0055FF"+.@card_total+" punto(s)^000000. ------";
	next;
	if(select("~ ^009900Vender^000000.:~ ^FF0000Cancel^000000.") == 2) {
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "Well, come back anytime...";
		emotion ET_SCRATCH;
		close;
	}
	for(set .@i,0; .@i < getarraysize(.@card_id); set .@i,.@i+1)
		delitem .@card_id[.@i],.@card_amt[.@i];
	setd .Points$, getd(.Points$)+.@card_total;
	mes "[ ^2e9c99Card Recycler^000000 ]";
	mes "^009900Done!^000000";
	emotion ET_DELIGHT;
	close;
 
OnBuyItem:
	for(set .@i,0; .@i < getarraysize(@bought_nameid); set .@i,.@i+1)
		for(set .@j,0; .@j <getarraysize(.Shop); set .@j,.@j+2)
			if (@bought_nameid[.@i] == .Shop[.@j]) {
				set .@cost, .@cost+(.Shop[.@j+1]*@bought_quantity[.@i]);
				break;
			}
	if (.@cost > getd(.Points$)) {
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "~ ^FF0000You don't have enough points^000000.";
		emotion ET_HUK;
	}
	else {
		mes "[ ^2e9c99Card Recycler^000000 ]";
		mes "Purchased item:";
		mes "-----------------------------------";
		for(set .@i,0; .@i < getarraysize(@bought_nameid); set .@i,.@i+1) {
			getitem @bought_nameid[.@i], @bought_quantity[.@i];
			mes "~ ^777777"+@bought_quantity[.@i]+"x "+getitemname(@bought_nameid[.@i])+"^000000.";
		}
		mes " ";
		mes "----- Total: ^0055FF"+.@cost+" point(s)^000000. ------";
		setd .Points$, getd(.Points$)-.@cost;
		emotion ET_MONEY;
	}
	deletearray @bought_nameid[0], getarraysize(@bought_nameid);
	deletearray @bought_quantity[0], getarraysize(@bought_quantity);
	close;
 
OnInit:
	waitingroom "[ Card Recycler ]",0;
	set .Level,0;		   // Minimum monster level to trade corresponding cards.
	set .Points$,"#Card_Points";	// Variable to store points.
	setarray .Shop[0],		// Card Shop items: <ID>,<point cost>
	  616,10;
	setarray .Points[0],1;	// Points per <normal card>,<MVP card>
	// Add more cards to mvp list
	set .MVP$,			// List of MVP cards.
	  "4121,4123,4128,4131,4132,4134,4135,4137,4142,4143,4144,4145,4146,4147,4148,4168,4236,"+
	  "4241,4263,4276,4302,4305,4318,4324,4330,4342,4357,4359,4361,4363,4365,4399,4403,4407,"+
	  "4372,4367,4352,4374,4376,4386,4408,4419,4425,4430,4441,4174,4198,1120,1096";
	
	npcshopdelitem "card_shop_trade",909;
	for(set .@i,0; .@i < getarraysize(.Shop); set .@i,.@i+2)
		npcshopadditem "card_shop_trade",.Shop[.@i],.Shop[.@i+1];
	end;
	

}
-	shop	card_shop_trade	-1,909:-1
